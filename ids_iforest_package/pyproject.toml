# SPDX-License-Identifier: MIT

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ids-iforest"
version = "0.1.0"
description = "Network intrusion detection system based on Isolation Forest and PyShark"
license = { text = "MIT" }
requires-python = ">=3.10"
keywords = ["ids", "machine learning", "isolation forest", "network", "security"]
authors = [{ name = "Rachid Bellaali", email = "bellaalirachid@gmail.com" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Security",
  "Topic :: System :: Networking",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research"
]

# PEP 621 requires an ARRAY OF STRINGS here.
dependencies = [
  "pyshark>=0.6,<0.7",        # Live capture & PCAP via tshark
  "scikit-learn>=1.5,<1.8",   # IsolationForest, StandardScaler (Py 3.11 compatible)
  "pandas>=1.5,<3.0",         # CSV I/O & DataFrame ops
  "numpy>=1.23,<2.0",         # Safe with scikit-learn 1.5 on Py 3.11
  "pyyaml>=6.0",              # Load config/config.yml
  "colorama>=0.4",            # Colored logging (gracefully degrades if absent)
  "joblib>=1.3",              # Model/scaler persistence
  "Flask>=2.3"                # Optional web UI (server.py)
]

[project.scripts]
ids-iforest-train   = "ids_iforest.train:main"
ids-iforest-detect  = "ids_iforest.detect:main"
ids-iforest-capture = "ids_iforest.capture:main"
ids-iforest-pcap2csv= "ids_iforest.pcap2flows:main"
ids-iforest-generate= "ids_iforest.scripts.generate_datasets:main"

[tool.setuptools]
[tool.setuptools.packages.find]
include = ["ids_iforest*"]
